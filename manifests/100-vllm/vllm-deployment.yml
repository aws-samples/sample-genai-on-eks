---
apiVersion: v1
kind: Service
metadata:
  name: mistral
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/app-metrics: "true"
    prometheus.io/port: "8080"
  labels:
    model: mistral7b
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    model: mistral7b
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mistral
  labels:
    model: mistral7b
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      model: mistral7b
  template:
    metadata:
      labels:
        model: mistral7b
    spec:
      serviceAccountName: model-storage-sa
      tolerations:
        - effect: NoSchedule
          key: nvidia.com/gpu
          operator: Exists
      nodeSelector:
        nvidia.com/gpu.present: "true"
      containers:
        - name: vllm
          image: public.ecr.aws/deep-learning-containers/vllm:0.10.2-gpu-py312-ec2
          imagePullPolicy: IfNotPresent
          args:
            - '--port=8080'
            - '--model=s3://${S3_BUCKET_NAME}/mistral-7b-v0-3/'
            - '--load-format=runai_streamer'
            - '--model-loader-extra-config={"concurrency":16}'
            - '--tokenizer_mode=auto'
            - '--trust-remote-code'
            - '--gpu_memory_utilization=0.90'
            - '--max-model-len=2048'
            - '--tensor-parallel-size=1'
            - '--max-num-batched-tokens=8192'
            - '--max-num-seqs=256'
            - '--block-size=16'
            - '--enforce-eager'
            - '--swap-space=16'
            - '--disable-custom-all-reduce'
            - '--config-format=mistral'
            - '--enable-auto-tool-choice'
            - '--tool-call-parser=mistral'
          env:
            - name: CUDA_LAUNCH_BLOCKING
              value: "1"
            - name: PYTORCH_CUDA_ALLOC_CONF
              value: "max_split_size_mb:512"
            - name: VLLM_ATTENTION_BACKEND
              value: "FLASHINFER"
          ports:
            - containerPort: 8080
              protocol: TCP
              name: http
          resources:
            requests:
              cpu: 6
              memory: 32Gi
              nvidia.com/gpu: 1
            limits:
              cpu: 6
              memory: 32Gi
              nvidia.com/gpu: 1
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
